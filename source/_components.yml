---
components:
  - &language_identifier
    name: Language Identifier
    repository: https://github.com/opener-project/language-identifier
    webservice: http://opener.olery.com/language-identifier
    description:
      Language identifier receives plain text and outputs the language of the input text.
      The identified language can be used as a parameter to the OpeNER modules that require a language parameter.
  - &tokenizer
    name: Tokenizer
    repository: https://github.com/opener-project/tokenizer
    webservice: http://opener.olery.com/tokenizer
    description:
      The tokenizer receives plain text as input and a language parameter.
      It splits it in paragraphs, sentences and tokens and generates a KAF document with this information.
      The resulting KAF document can be used as input to other modules.
  - &tree_tagger
    name: Tree Tagger
    repository: https://github.com/opener-project/opener-tree-tagger
    webservice: http://opener.olery.com/tree-tagger
    description:
      This tool implements a wrapper for TreeTagger (http://www.cis.uni-muenchen.de/~schmid/tools/TreeTagger) allowing to 
      apply this tagger to KAF files and obtain the result also in KAF format. It provides the lemmas and part-of-speech
      tags of the tokens in a given text and works for all the OpeNER languages The tagset used is the one specified in the 
      KAF definition, but the real tags from TreeTagger are also stored in the result.
  - &pos_tagger
    name: POS Tagger
    repository: https://github.com/opener-project/pos-tagger
    webservice: http://opener.olery.com/pos-tagger
    description:
      This is a placeholder for a 2 to 5 line description of the component.
      Each component should have description like this. So that when we provide
      a nice overview page, then we can show a neat description.
  - &ner
    name: NER
    repository: https://github.com/opener-project/ner
    webservice: http://opener.olery.com/ner
    description:
      This is a placeholder for a 2 to 5 line description of the component.
      Each component should have description like this. So that when we provide
      a nice overview page, then we can show a neat description.
  - &ned
    name: NED
    repository: https://github.com/opener-project/ned
    webservice: http://opener.olery.com/ned
    description:
      This is a placeholder for a 2 to 5 line description of the component.
      Each component should have description like this. So that when we provide
      a nice overview page, then we can show a neat description.
  - &coreference
    name: Coreference
    repository: https://github.com/opener-project/coreference
    webservice: http://opener.olery.com/coreference
    description:
      This is a placeholder for a 2 to 5 line description of the component.
      Each component should have description like this. So that when we provide
      a nice overview page, then we can show a neat description.
  - &constituent
    name: Constituent Parser
    repository: https://github.com/opener-project/constituent-parser
    webservice: http://opener.olery.com/constituent-parser
    description:
      This is a placeholder for a 2 to 5 line description of the component.
      Each component should have description like this. So that when we provide
      a nice overview page, then we can show a neat description.
  - &property_tagger
    name: Property Tagger
    repository: https://github.com/opener-project/property-tagger
    webservice: http://opener.olery.com/property-tagger
    description:
      This module implements a tagger for hotel properties. It detects aspect words
      which represent aspect or properties of a hotel, and links them with the correct aspect class.
      These properties are important because they are usually the target of the opinions. For instance,
      it would detect that "bed" or "mattress" are hotel properties related to the aspect SLEEPING_COMFORT.
      It works for all the OpeNER languages and it is based on the KAF format for the input/output files.
  - &polarity_tagger
    name: Polarity Tagger
    repository: https://github.com/opener-project/polarity-tagger
    webservice: http://opener.olery.com/polarity-tagger
    description:
      The polarity tagger assigns polarity information to words on the text. This polarity information contains
      basically the positive/negative content of the word (good, cheap, clean can be positive words in the hotel
      domain), and words which are polarity modifiers (negators, intensifiers, ...). This tool is based on a set
      of lexicons which contain the polarity information, but new custom lexicons can be added. The polarity
      information will be used to detect and extract complete opinions.
  - &opinion_detector_basic
    name: Opinion Detector Basic
    repository: https://github.com/opener-project/opinion-detector-basic
    webservice: http://opener.olery.com/opinion-detector-basic
    description:
      The opinion detector basic detects and extracts fine-grained opinions on an input KAF file. In particular
      the opinion expression (the actual opinion), the target (what is the opinion about) and the holder (who is
      expressing the opinion) will be detected for each opinion. This basic version is based on the evidence
      provided by the polarity information and a set of rules. 
  - &opinion_detector_deluxe
    name: Opinion Detector Deluxe
    repository: https://github.com/opener-project/opinion-detector
    webservice: http://opener.olery.com/opinion-detector
    description:
      The opinion detector deluxe also extracts fine-grained opinions as the basic version. It is based on 
      Machine Learning, using two Artificial Intelligence algorithms (Conditional Random Fields and Support 
      Vector Machines) to induce models from annotated data. Models for hotel, restaurants and attractions reviews
      are provided, as well as for political news, but the tool allows to train a new model for a new domain if 
      the annotated data for the new domain is available.
  - &outlet
    name: Outlet
    repository: https://github.com/opener-project/outlet
    webservice: http://opener.olery.com/outlet
    description:
      This is a placeholder for a 2 to 5 line description of the component.
      Each component should have description like this. So that when we provide
      a nice overview page, then we can show a neat description.
  - &s3_outlet
    name: S3 Outlet
    repository: https://github.com/opener-project/s3-outlet
    webservice: http://opener.olery.com/s3-outlet
    description:
      This is a placeholder for a 2 to 5 line description of the component.
      Each component should have description like this. So that when we provide
      a nice overview page, then we can show a neat description.
  - &kaf_to_json
    name: kaf-to-json
    repository: https://github.com/opener-project/kaf-to-json
    webservice: http://opener.olery.com/kaf-to-json
    description:
      This is a placeholder for a 2 to 5 line description of the component.
      Each component should have description like this. So that when we provide
      a nice overview page, then we can show a neat description.
  - &kaf_naf_parser
    name: kaf-naf parser
    repository: https://github.com/opener-project/kaf-naf-parser
    webservice: http://opener.olery.com/kaf-naf-parser
    description:
      This is a placeholder for a 2 to 5 line description of the component.
      Each component should have description like this. So that when we provide
      a nice overview page, then we can show a neat description.
  - &scorer
    name: Sentiment Scores
    repository: https://github.com/opener-project/scorer
    webservice: http://opener.olery.com/scorer
    description:
      This is a placeholder for a 2 to 5 line description of the component.
      Each component should have description like this. So that when we provide
      a nice overview page, then we can show a neat description.

clusters:
  - &c_input_tools
    name: Input Tools
    components: [*language_identifier]
    description:
      This is a placeholder for a 2 to 5 line description of the cluster of components.
      Each cluster should have description like this. So that when we provide
      a nice overview page, then we can show a neat description.
  - &c_foundation
    name: Basics
    components: [*tokenizer, *pos_tagger, *tree_tagger]
    description:
      This is a placeholder for a 2 to 5 line description of the cluster of components.
      Each cluster should have description like this. So that when we provide
      a nice overview page, then we can show a neat description.
  - &c_nerned
    name: NER/NED/Co-reference
    components: [*ner, *ned, *coreference]
    description:
      This is a placeholder for a 2 to 5 line description of the cluster of components.
      Each cluster should have description like this. So that when we provide
      a nice overview page, then we can show a neat description.
  - &c_property
    name: Property Tagger
    components: [*property_tagger]
    description:
      This is a placeholder for a 2 to 5 line description of the cluster of components.
      Each cluster should have description like this. So that when we provide
      a nice overview page, then we can show a neat description.
  - &c_polarity
    name: Polarity / Opinions
    components: [*opinion_detector_basic, *opinion_detector_deluxe, *polarity_tagger]
    description:
      This is a placeholder for a 2 to 5 line description of the cluster of components.
      Each cluster should have description like this. So that when we provide
      a nice overview page, then we can show a neat description.
  - &c_storage
    name: Storage
    components: [*outlet, *s3_outlet]
    description:
      This is a placeholder for a 2 to 5 line description of the cluster of components.
      Each cluster should have description like this. So that when we provide
      a nice overview page, then we can show a neat description.
  - &c_converters
    name: Converters
    components: [*kaf_to_json, *kaf_naf_parser]
    description:
      This is a placeholder for a 2 to 5 line description of the cluster of components.
      Each cluster should have description like this. So that when we provide
      a nice overview page, then we can show a neat description.
  - &c_processors
    name: Processors / Aggregators
    components: [*scorer]
    description:
      This is a placeholder for a 2 to 5 line description of the cluster of components.
      Each cluster should have description like this. So that when we provide
      a nice overview page, then we can show a neat description.
  - &c_toolkits
    name: Toolkits
    components: []
    description:
      This is a placeholder for a 2 to 5 line description of the cluster of components.
      Each cluster should have description like this. So that when we provide
      a nice overview page, then we can show a neat description.

webservices:
  - *c_input_tools
  - *c_foundation
  - *c_nerned
  - *c_property
  - *c_polarity
  - *c_storage
  - *c_converters
  - *c_processors
  -
    name: Scenarios
    components:
      -
        name: Basic Opinions
        webservice: /webservices/scenarios/basic-opinions.html
        documentation: /getting-started/scenarios/basic-opinions.html
        description:
          This is a placeholder for a 2 to 5 line description of the component.
          Each component should have description like this. So that when we provide
          a nice overview page, then we can show a neat description.
      -
        name: Named Entity Disambiguation
        webservice: /webservices/scenarios/named-entity-disambiguation.html
        documentation: /getting-started/scenarios/named-entity-disambiguation.html
        description:
          This is a placeholder for a 2 to 5 line description of the component.
          Each component should have description like this. So that when we provide
          a nice overview page, then we can show a neat description.
      -
        name: Full Pipeline
        webservice: /webservices/scenarios/full-pipeline.html
        documentation: /getting-started/scenarios/full-pipeline.html
        description:
          This is a placeholder for a 2 to 5 line description of the component.
          Each component should have description like this. So that when we provide
          a nice overview page, then we can show a neat description.

toolkits:
  -
    name: Brat conversion tools
    partner: Vicom
    person: Aitor
  -
    name: Opinion miner toolkit
    partner: VU
    person: Ruben
  -
    name: Lexical acquisition toolkit
    partner: VU
    person: Ruben
  -
    name: Lexicon propagation toolkit
    partner: VU
    person: Ruben
  -
    name: Domain adaptation toolkit
    partner: Vicom
    person: Andoni  

datasets: &datasets
  -
    name: Sentiment Lexicons WordNet propagation (Es,En,Nl,Fr,It)
    partner: VU
  -
    name: Sentiment Lexicon Tourist Domain (Es,En,Nl,De,Fr,It)
    partner: VU
  -
    name: Hotel Reviews Metadata (Es,En,Nl,De,Fr,It)
    partner: VU
  -
    name: Attraction Reviews Metadata (Es,En,Nl,De,Fr,It)
    partner: VU
  -
    name: News Articles Annotated Metadata (Es,En,Nl,De,Fr,It)
    partner: VU
  -
    name: Ent-Itup Social and Mass Media Analysis application
    partner: Synthema
  -
    name: Tourpedia Named Entities LOD dataset
    documentation: http://tour-pedia.org
  -
    name: Tourpedia Named Entities OD dataset
    documentation: http://tour-pedia.org
  -
    name: Sentiment on Social Media Classifier training sets

lexicons: &lexicons
  -
    name: Sentiment Lexicons
    documentation: https://github.com/opener-project/sentiment-lexicons
  -
    name: Polarity Lexicons
    documentation: https://github.com/opener-project/general-polarity-lexicons
  -
    name: Propagation Lexicons
    documentation: https://github.com/opener-project/VU-propagation-lexicons_ALL_LANGS_data

documentation:
  components:
    - *c_input_tools
    - *c_foundation
    - *c_nerned
    - *c_property
    - *c_polarity
    - *c_storage
    - *c_converters
    - *c_processors
    - *c_toolkits
  lexicons: *lexicons
  datasets: *datasets
  other:
    -
      name: KAF
      documentation: https://github.com/opener-project/kaf/wiki/KAF-structure-overview
    -
      name: KAF JSON
      documentation: https://github.com/opener-project/kaf-to-json
    -
      name: OpeNER LMF
      documentation: https://dl.dropboxusercontent.com/u/43647591/deliverablesOpeNER/OpeNER_D5.31.pdf

